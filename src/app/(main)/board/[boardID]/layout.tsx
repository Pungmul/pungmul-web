'use client'
// import type { Metadata } from "next";
import "@pThunder/app/globals.css";
import PostList, { BoardData } from "./PostList";
import { GET } from "./api/route";
import PostingButton from "./PostingButton";
import { CSSTransition } from 'react-transition-group';
import { useEffect, useState } from "react";
import { loadPosts } from "./utils";

// export const metadata: Metadata = {
//     title: "Create Next App",
//     description: "Generated by create next app",
// };

export default async function Layout({
    children, params
}: Readonly<{
    children: React.ReactNode
    params: { boardID: number }
}>) {
    const { boardID } = params;

    const [showChildren, setShowChildren] = useState(false);
    const [data, setData] = useState<BoardData | null>(null)

    useEffect(() => {
        const fetchData = async () => {
            try {
                const response = await loadPosts(boardID);

                if (!response.ok) throw Error('server errored')
                const data = await response.json();
                setData(data)
            }
            catch (e) {
                console.log(e);
            }
        }
        fetchData();
    }, [boardID])


    if (!data)
        return (
            <div>로딩중...</div>
        )

    return (
        <div className="h-full">
            <div className="flex flex-col">
                <header className="w-full py-4 top-0 sticky bg-white px-6">
                    {data.boardInfo.rootCategoryName}
                </header>
                <div className="flex-grow w-full">
                    <PostList params={params} data={data} />
                </div>
                <CSSTransition
                    in={showChildren} // 애니메이션 상태
                    timeout={300} // 애니메이션 지속 시간 (ms)
                    classNames="slide" // 클래스 이름 접두사
                    unmountOnExit
                >
                    <div className="fixed inset-0 bg-white z-50">
                        {children}
                    </div>
                </CSSTransition>
            </div>
            <div className="fixed bottom-12 right-12">
                <PostingButton boardID={boardID} />
            </div>
        </div>
    );
}